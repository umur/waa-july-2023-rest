package com.miu.waa.lab2.repository;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Repository;

import com.miu.waa.lab2.entity.Course;

@Repository
public class CourseRepo {
    List<Course> courses = new ArrayList<>();

    public Course create(Course course) {
        course.setId(getAutogeneratedId());
        courses.add(course);
        return course;
    }

    private Long getAutogeneratedId() {
        if (courses.isEmpty()) {
            return (long) 1;
        }

        return courses.get(courses.size() - 1).getId() + 1;
    }

    public Course update(Course course) {
        int index = indexOf(course.getId());

        if (index == -1) {
            return null;
        }

        courses.set(index, course);
        return courses.get(index);
    }

    public Course delete(Long id) {
        int index = indexOf(id);

        if (index == -1) {
            return null;
        }

        return courses.remove(index);
    }

    public int indexOf(Long id) {
        for (int i = 0; i < courses.size(); i++) {
            if (id.equals(courses.get(i).getId())) {
                return i;
            }
        }

        return -1;
    }

    public Optional<Course> findById(Long id) {
        return courses.stream().filter(x -> x.getId().equals(id)).findAny();
    }

    public List<Course> findAll() {
        return courses;
    }
}
