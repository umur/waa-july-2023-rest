package com.miu.waa.lab2.repository;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.stereotype.Repository;

import com.miu.waa.lab2.entity.Student;

@Repository
public class StudentRepo {
    List<Student> students = new ArrayList<>();

    public Student create(Student student) {
        student.setId(getAutogeneratedId());
        students.add(student);
        return student;
    }

    private Long getAutogeneratedId() {
        if (students.isEmpty()) {
            return (long) 1;
        }

        return students.get(students.size() - 1).getId() + 1;
    }

    public Student update(Student student) {
        int index = indexOf(student.getId());

        if (index == -1) {
            return null;
        }

        students.set(index, student);
        return student;
    }

    public Student delete(Long id) {
        int index = indexOf(id);

        if (index == -1) {
            return null;
        }

        return students.remove(index);
    }

    public int indexOf(Long id) {
        for (int i = 0; i < students.size(); i++) {
            if (id.equals(students.get(i).getId())) {
                return i;
            }
        }

        return -1;
    }

    public Optional<Student> findById(Long id) {
        return students.stream().filter(x -> x.getId().equals(id)).findAny();
    }

    public List<Student> findAll() {
        return students;
    }

    public List<Student> getStudentsByMajor(String major) {
        return students.stream().filter(x -> x.getMajor().equalsIgnoreCase(major)).collect(Collectors.toList());
    }
}
